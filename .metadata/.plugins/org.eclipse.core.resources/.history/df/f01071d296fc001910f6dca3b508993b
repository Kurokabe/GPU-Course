
package org.bilat.tuto.image.jni.gui;

import java.awt.BorderLayout;

import javax.swing.JFrame;
import javax.swing.WindowConstants;

import org.bilat.tuto.image.jni.gui.atome.CanvasImage;
import org.bilat.tuto.image.jni.gui.atome.JPanelImage;

import com.bilat.canvas.jni.ui.CanvasNativeListener_I;

public class JFrameMain2Images extends JFrame
	{

	/*------------------------------------------------------------------*\
	|*							Constructeurs							*|
	\*------------------------------------------------------------------*/

	public JFrameMain2Images(int w, int h)
		{
		this.w = w;
		this.h = h;

		geometry();
		controle();
		apparence();
		}

	/*------------------------------------------------------------------*\
	|*							Methodes Public							*|
	\*------------------------------------------------------------------*/

	/*------------------------------------------------------------------*\
	|*							Methodes Private						*|
	\*------------------------------------------------------------------*/

	private void geometry()
		{
		panelImage1 = new JPanelImage(w/2, h);
		panelImage2 = new JPanelImage(w/2, h);

		setLayout(new BorderLayout());
		add(panelImage1, BorderLayout.EAST);
		add(panelImage2, BorderLayout.WEST);
		}

	private void apparence()
		{
		setTitle(TITLE);
		setSize(w, h);
		setLocationRelativeTo(null);

		setVisible(true);
		}

	private void controle()
		{
		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

		//Facultatitif,Example
			{
			final CanvasImage canvasImage = panelImage1.getCanvasImage();
			canvasImage.addCanvasNativeListener(new CanvasNativeListener_I()
				{

				@Override
				public void onPaintPerformed()
					{
					int fps = canvasImage.getFPS();
					StringBuilder str = new StringBuilder();
					str.append(TITLE);
					str.append(AT);
					str.append(fps);
					str.append(FPS);
					str.append(sizeCanvasGL(canvasImage));
					str.append(SPACE);
					str.append(sizeImage(canvasImage));
					String title = str.toString();

					setTitle(title);
					}
				});
			}
		}

	private String sizeCanvasGL(final CanvasImage canvasImage)
		{
		StringBuilder str = new StringBuilder();
		str.append("Pannel(");
		str.append(canvasImage.getWidth());
		str.append(" x ");
		str.append(canvasImage.getHeight());
		str.append(")");

		return str.toString();
		}

	private String sizeImage(final CanvasImage canvasImage)
		{
		StringBuilder str = new StringBuilder();
		str.append("Image(");
		str.append(canvasImage.getImageWidth());
		str.append(" x ");
		str.append(canvasImage.getImageHeight());
		str.append(")");

		return str.toString();
		}

	/*------------------------------------------------------------------*\
	|*							Attributs Private						*|
	\*------------------------------------------------------------------*/

	//Inputs
	private int w;
	private int h;

	// Tools
	private JPanelImage panelImage1;
	private JPanelImage panelImage2;

	/*------------------------------*\
	|*			  Static			*|
	\*------------------------------*/

	private static final String TITLE = "Java GUI with Native Canvas using OpenGL";
	private static final String AT = " @ ";
	private static final String FPS = "fps : ";
	private static final String SPACE = " ";

	}
